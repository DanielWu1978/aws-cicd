---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Master stack: PathToMasterStackFile'
# aws cloudformation create-stack --stack-name stackPrepareEC2 --template-body file://prepare_ec2.yml --capabilities CAPABILITY_NAMED_IAM --parameters ParameterKey=BranchName,ParameterValue=SubnetID --region us-east-1
# aws cloudformation delete-stack --stack-name stackPrepareEC2 --region us-east-1
Parameters:
  BranchName:
    Default: "test"
    Description: The BranchName the stack is running
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Tagging and billing
      Parameters:
      - Customer
      - CustomerProject
    - Label:
        default: Choose Branch and Environment
      Parameters:
      - Environment
      - BranchName
## Mappings:

Resources:
  S3ReadOnly:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - 
         PolicyName: "root"
         PolicyDocument:
           Version: "2012-10-17"
           Statement:
              - 
                Effect: "Allow"
                Action: "S3:GetObject"
                Resource: "*"
  onPremiseCodeBuildProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref S3ReadOnly
  secGroupName:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: DevOpsSecurityGroup
      GroupDescription: for dev ops
      ## VpcId:
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Environment
          Value: test
Outputs:
  ec2Profile:
    Value:  !Ref onPremiseCodeBuildProfile
    Export:  
       Name : 
        Fn::Sub: 
          "${AWS::StackName}-ec2Profile"
  securityGroup:
    Value:  !Ref secGroupName
    Export:  
       Name : 
        Fn::Sub: 
          "${AWS::StackName}-securityGroup"
